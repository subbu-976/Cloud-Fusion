name: Terraform Unlock

on:
  workflow_dispatch:  # Manual trigger only, no push triggers

jobs:
  terraform-unlock:
    name: Remove Terraform State Lock
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./cloudathon

    steps:
      # Checkout the specific branch for reference code
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: venkat-cloudathon-terraform-workflow  # Reference branch

      # Setup Google Cloud SDK authentication
      - name: Setup GCP Authentication
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Initialize Terraform with GCS backend
      - name: Terraform Init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # Remove Terraform state lock automatically
      - name: Remove Terraform State Lock
        run: |
          # Attempt a plan to trigger lock error, capture output
          terraform plan -lock-timeout=0s > plan_output.txt 2>&1 || true
          # Extract Lock ID from the error message
          LOCK_ID=$(grep -oP 'ID: \K[0-9a-f-]+' plan_output.txt || echo "no-lock-found")
          if [ "$LOCK_ID" != "no-lock-found" ]; then
            echo "Found lock with ID: $LOCK_ID"
            terraform force-unlock -force "$LOCK_ID"
            echo "Lock removed successfully"
          else
            echo "No lock found or unable to extract Lock ID from output"
            cat plan_output.txt  # Show full output for debugging
            exit 1  # Fail the step if no lock is found
          fi
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}